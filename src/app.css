@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'elven';
  src: url('/static/fonts/elven.otf') format('opentype');
}

:root {
/* BACKGROUNDS */
  /* solid */
  --background-color: #ffffff;

  /* gradient */
  --background-gradient-direction: 0deg;
  --background-gradient-from: #ffffff;
  --background-gradient-to: #ffffff;
  
  /* image */
  --background-url: url('linkDefault.png');
  --background-size: cover;
  --background-repeat: no-repeat;
  --background-position: center;

/* LINKS */
  /* title */
  --title-color: #ffffff;

  /* fill */
  --fill-color: #ffffff;

  /* shadow */
  --shadow-color: hsl(var(--a));
  --r: calc(var(--shadow-red, 0) * 255);
  --g: calc(var(--shadow-greed, 0) * 255);
  --b: calc(var(--shadow-blue, 0) * 255);

/* BORDERS */
  /* solid */
  --border-color: #ffffff;
  --border-style: solid;
  --border-width: 0.1rem;

  /* image */
  --border-image: url('/borderDefault.png');
  --border-repeat: no-repeat;

  /* gradient */
  --border-gradient-direction: 0deg;
  --border-gradient-from: #ffffff;
  --border-gradient-to: #ffffff;

  transition:
    background-color 1s ease-out,
    color 1.5s ease-out,
    border-color 1.5s ease-out;
}

.background-solid {
  background: var(--background-color);
}

.background-gradient {
  background: linear-gradient(var(--border-gradient-direction), var(--border-gradient-from), var(--border-gradient-to));
}

.background-image {
  background: var(--background-position) / var(--background-size) var(--background-repeat) var(--background-url);
}

.dummy {
  background-color: rgba(var(--shadow-color));
  --shadow-red: red;
  --shadow-green: green;
  --shadow-blue: blue;
}

.btn {
  transition:
    background-color 0.23s ease-out,
    color 0.5s ease-out,
    border-color 1.5s ease-out;
  border-radius: 2s ease-out;
}

html {
  scroll-behavior: smooth;
}



.glow {
  color: #fff;
  -webkit-animation: glow 1s ease-in-out infinite alternate;
  -moz-animation: glow 1s ease-in-out infinite alternate;
  animation: glow 1s ease-in-out infinite alternate;
}

@keyframes glow {
  from {
    text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #e60073, 0 0 40px #e60073, 0 0 50px #e60073, 0 0 60px #e60073, 0 0 70px #e60073;
  }
  to {
    text-shadow: 0 0 20px #fff, 0 0 30px #ff4da6, 0 0 40px #ff4da6, 0 0 50px #ff4da6, 0 0 60px #ff4da6, 0 0 70px #ff4da6, 0 0 80px #ff4da6;
  }
}

.elven {
  font-family: p22-elven, sans-serif;
  font-style: normal;
  font-weight: 400;
}

.input::placeholder {
  color: hsl(var(--a));
}

.soft-shadow {
  box-shadow: 0 10px 20px -10px var(--shadow-color);
}

.hard-shadow {
  box-shadow: 10px 10px 0px var(--shadow-color);
}

.hard-shadow:hover {
  box-shadow: 15px 10px 0px var(--shadow-color);
}

.smooth-steel {
  box-shadow: rgba(var(--shadow-rgb), 0.17) 0px -23px 25px 0px inset, rgba(var(--shadow-rgb), 0.15) 0px -36px 30px 0px inset, rgba(var(--shadow-rgb), 0.1) 0px -79px 40px 0px inset, rgba(var(--shadow-rgb), 0.06) 0px 2px 1px, rgba(var(--shadow-rgb), 0.09) 0px 4px 2px, rgba(var(--shadow-rgb), 0.09) 0px 8px 4px, rgba(var(--shadow-rgb), 0.09) 0px 16px 8px, rgba(var(--shadow-rgb), 0.09) 0px 32px 16px;
}

.tony {
  background-image: linear-gradient(
    to right,
    hsl(var(--a)),
    hsl(var(--a)) 50%,
    var(--title-color) 50%
  );
  background-size: 200% 100%;
  background-position: -100%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  transition: all 0.3s ease-in-out;
}

.tony::before {
  content: '';
  background: hsl(var(--s));
  display: block;
  position: absolute;
  bottom: 2px;
  left: 0;
  width: 0;
  height: 4px;
}

.tony:hover {
  background-position: 0;
}

.tony:hover::before {
  width: 100%;
}

.croc {
  box-shadow: hsl(var(--p)) 5px 5px, hsl(var(--p)) 10px 10px, hsl(var(--p)) 15px 15px, rgba(240, 46, 170, 0.1) 20px 20px, rgba(240, 46, 170, 0.05) 25px 25px;
  transition: all 0.8s ease-in-out;
}

.croc:hover {
  box-shadow: rgba(240, 46, 170, 0.4) -5px -5px, rgba(240, 46, 170, 0.3) -10px -10px, rgba(240, 46, 170, 0.2) -15px -15px, rgba(240, 46, 170, 0.1) -20px -20px, rgba(240, 46, 170, 0.05) -25px -25px;
}

.border-solid {
  border: var(--border-width) var(--border-style) var(--border-color) 
}

.border-gradient {
  border: var(--border-width) solid transparent;
  border-image: linear-gradient(var(--border-gradient-direction), var(--border-gradient-from), var(--border-gradient-to));
  border-image-slice: 1;
}

.border-image {
  border: var(--border-width) solid; 
  border-image: var(--border-image) var(--border-repeat);
}

.hover-2 {
  --c: var(--border-color); /* the color */
  --b: var(--border-width);    /* border length*/
  --d: 10px;    /* the cube depth */
  
  --_s: calc(var(--d) + var(--b));
  
  border-width: var(--b) var(--b) var(--_s) var(--_s);
  background:
    conic-gradient(at left var(--d)  bottom var(--d),
      #0000 90deg, rgb(255 255 255 /0.3) 0 225deg,rgb(255 255 255 /0.6) 0) border-box,
    conic-gradient(at left var(--_s) bottom var(--_s),
      #0000 90deg,var(--c) 0) 0 100%/calc(100% - var(--b)) calc(100% - var(--b))  border-box;
  transform: translate(calc(var(--d)/-1),var(--d));
  clip-path: 
    polygon(
     var(--d) 0%, 
     var(--d) 0%, 
     100% 0%, 
     100% calc(100% - var(--d)),
     100% calc(100% - var(--d)),
     var(--d) calc(100% - var(--d))
    );
  transition: 0.5s;
}
.hover-2:hover {
  transform: translate(0,0);
  clip-path: 
    polygon(
     0% var(--d), 
     var(--d) 0%, 
     100% 0%, 
     100% calc(100% - var(--d)), 
     calc(100% - var(--d)) 100%, 
     0% 100%
   );
}

.full-preview {
  width: 100vw;
  height: 100vh;
  border: none;
  border-radius: 0;
}

.small-preview {
  width: 30vw;
  min-width: 190px;
  min-height: 380px;
  max-height: 600px;
  max-width: 300px;
  border: 0.75rem solid black;
  border-radius: 33px;
}

.common-preview { 
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  overflow: auto;
}
