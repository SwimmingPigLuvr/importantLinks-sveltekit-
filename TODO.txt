make sure that theme is saved to firestore





























loading state





















o


















make sure that the html is using the user's saved theme as the theme, 
not the selected theme

if no theme saved or if not logged in => default theme

let user create their own theme
just create a color picker for primary, secondary...

let user change username


center links
let user upload custom links

finish video series



set link icons to images

figure out best way to integrate custom G:
font choices, colors, etc, stored on a users database


appearance:

Profile:
div 
    PFP: pick an image / remove
    profile title: (default is @username)
    Bio:
    div
    + Add Social Icons
    /div
/div

Themes
div
    grid of themes to choose from
/div

Custom

Backgrounds
div
    grid of backgrounds to choose
    div
        color picker
    /div
/div

buttons
div
    grid of link button options
    button color picker
    font color picker
    shadow color picker
/div

Fonts
font picker
color picker

_____________

should i build the ui then figure out how to connect these variables to the backend?
yes i think so
should be hard. just like i created a way to save the users links. should be the same
they can be saved as:
lightTheme
darkTheme

userTheme:
    userbg
    userButton
    userButtonColor
    userButtonFont
    userButtonFontColor
    userButtonShadow: true/false
    userButtonShadowColor
    




TODO 7/29

think about architecture of the appearance settings

user should be able to amke changes everywhere after one click

they select primary, secondary, accent colors

fonts

then whereever those fonts are used the database is called to bring it in.


---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------


8.01.23

theme. let's first make sure that i can save the users theme then also call the users theme whereever neccessary
[username] & [username]/edit art the only ones so far.
let's see what it takes to make it load as fast as possible that way someone looking at your link site doesn't have to wait for the page to load

the theme picker works!
now i need to go back to all of my link styles and make sure that they follow the daisy ui
names: primary, secondary etc...

then once that is done i can create a page that lets the user pick each style individually. 
this will create a new theme and save it to the database: userTheme.

the prebuilt themes just use the name to determin styles becasue they are already built out
the userTheme will have to save each user selection

does this mean i will have to make a call from my database to the tailwind config file?
also each selection will have to trigger the corresponding css/tailwind classes to be defined

list of customizations
bg
font, font color
button color, button corners,


aubust 02

UX choice:
finish login, choose theme, go to profile page/link page

more ux:
choose themes:
list the same themes from before.
this time with previews:
preview is a smartphone shaped div 
with a background 
and 3 horizontal divs to resemble links

changes are saved as they are clicked.
database makes realtime updates

8.03

make an appearance page.

linktrees ui is great so i will use that as my wireframe



august 15 todo

✅fix edit profile h1 height on edit page so that when user clicks edit the pfp stays in the same place
🤔change the bottom margin of the bio for the same reason

username page has worse defualt bg than edit page

make bio and pfp editable from edit page

edit page doesn't use customBG
edit page loses theme completely

appearance page loses theme and links after reload

buttonFontColor is something to fix

footer covers content

live preview needs to be reactive to instant changes


finished


audust 17

ideas

anymessage shjouldnt be annoyingh at all! thats the opposite of helpful
should have a nerd emoji giving tips

have remilio giving anouncements. anything with more authority really

still have to figure out how to stop propogation on the links on the edit page!

the button needs to be redesigned anyways so 
i think that it should just take up the whole right side of the link. 
maybe square shaped and a little trash emoji



friday august 18 755 am

add loading animations

new idea: complete customization. users can have links be any kind of shape or size

destroyed tasks
✅dnd Message shouldn't be so wide

✅adding delete button to the sortable list component 
✅so that i can use the index to determine the exact link to delete

✅ --cant scroll links. they just deadend--


focused tasks
links load in 1 at a time. 
i used to know how to do this idk where the solution went 
but its al ot more simpler that the ones ive been seeeing

🌸
august 19

goal:
    create a working store for the users themes


🪴example from docs
    <script>
  import { writable } from 'svelte/store';

  const count = writable(0);
  console.log($count); // logs 0

  count.set(1);
  console.log($count); // logs 1

  $count = 2;
  console.log($count); // logs 2
</script>


why? 
    instant reactive changes. 
    consistent easily called customizations across pages

how:
    get data into store from db, 
    call store from anywhere in project



✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅✅

NEW FOCUS

figure out the best way to make a store and go from there! 
eliminate redundant code 

so far the users first page works the best!
find out why and use that why!

🌸
august 21

figure out what i figured out from yesterday
why how why

figure out whats breaking and why

😂
also make sure that when a user wants to sign in on mobile they can. it gets all fucced up when it opens a google sign in


🌸critical mission: fix theme

so rn i have updatetheme called on homepage

update theme sets the themeStore to custom theme

so now the customtheme lives on the theme store

so now i should use the themestore to style values

🗣
goal to make everything easily customizable

but not too complicated

should i have the theme store in my livepreview? or in my appearance page??
both i think yeah

figure out how to upload a new pfp from the edit page?

also why the f is the edit page using a weird theme

lets get down to the bottom of this


august 22

see where its fucked up
fix that
then ui

🌸 APP TODO LIST 🌸
✅ edit profile theme needs to work
✅nav bar: quicker, made into a component, text size
✅nav bar: home. edit. appearance.
✅if on page then the nav should reflect that: dimmer text color

✅livepreview should reflect a real live preview
    set up store same way that the other files have it
        ✅data loaded in properly
            variables set up properly
                lets set up divs to test? wait is this really the best way

        question? should i set up the userdata for live preview? or just pass it in as props?
        lets find out shall we
    ???

update outline border styles


maybe different nav solution for the appearance page. 
    let's see how well it fits in


preload edit page so there is no lag at the begining

enhanced customizating (see list below)

theme should take over custom options

fix:
upload pfp 
upload bg 
gradients

ui todo list:
center link titles
link shadows are too big
edit:
    move edit bio button to the side
livepreview:
     should animate in on fullscreen



enhanced customization
composition: links locations
content: videos, blog posts

hover settings.
    default is currently translate to the right and down a bit
    color changes
    show preview
    each link has a color id that changes the background on hover
link size and shape.
shadow color, size, grow on hover
border color, size, grow on hover
custom cursor


idea:
to get ready for all of these new customization features that i want to add
i should extend CustomTheme
already i have hex codes that should be added





short todo

fontcolor colorpicker is opening the button color picker
it still works it just exists above

live preview doesnt yet show the font color. 
maybe the div that live preview is in can just be the font color so i dont have to pass the data (lazy)

but if this doesn't result in a reactive change then let's just pass the data


weird minor detail bug?

on appearance page the theme of the page changes to default when refreshed.

but the live preview stays on the correct theme



✅head to uselink and figure out how to center the titles
ducktape bandaid solution: -translate-x-6

✅prebuilt theme doesn't properly apply to homepage



✅homepage isnt reactive because its not using the store the same way that edit page is using $userData



need to resolve the footer

need to have credit but also direct user to create their own if theyre not logged in


should be able to see other users content without being logged in

description of the error 
i can only be signed in under @Remilio
once signed in i can user any other users username as a route 
localhost/PeterGriffin just shows me remilios data
but if im logged in as PeterGriffin then i cant see anything


somehow i broke it

probably the userstore only accepts remilio as data but the app should be able to pull any users' data
the only thing that you have to be logged in for is editing the data: edit, appearance


august 22 6:13pm

planning each step so i can organize how i think about the code:

✅{right now the link title is shifted to the left. 
this centers it perfectly 
but in the live preview it goes too far

i need to find the state that is passed into userlink that lets it know that it is in preview mode
then i need to make sure the style is cahanged for the little mini baby links}✅



themes only work if there is no custom theme value
prebuilt themes are the fallback

tell the user that themes are fallbacks 

or we can take into consideration that themes weigh more than custom themes
let the user save a custom theme



main user page has no set theme
fallsback to default theme

last selection first
current theme goes

theme -> custombuttons => theme + customButtons
custombuttons -> theme => theme

how do we go about this?

certain bg colors dont cover screen weird



important tasks
fix auth buggy wigyyy



dnd message feels weird



focus

todo
get data from the user that is in the route

example if user is on yin.yang/PeterGriffin then we use that to get the data
update the $themeStore with that

make sure edit only is available to signed in users
edit only if (user is signed in && user matches yin.yang/username)


lets see how i got that page param in the nav

import page from $app/svelte

// on yin.yang/remilio

console.log('$page.params.username: ', $page.params.username); === [username]
then updates the $userData store 
with all of the data from that users db

nav to edit / appearance only if logged in



add glow effects

fullscreen preview on hover would be sick

new section:
text effects
tracking


create a toggle to choose hover on text effects

hover effects: rotate? clock animation thing real old school style
the css possibilities are endless


august 23:
focus

is anything broken??

or can i just start throwing in styles?

I should really expand on the CustomTheme type

so that i can easily add it to my data

so my ui focues should be the userlink component styles


todoList
Create toggle for text styles:
    hover / static
    on:clicking the text style should default to static
    ✅this should trigger a handler function that saves into the db
    what info do i need to know?
        textEffect: {effect: string, onHover: boolean}
    should toggle only appear on chosen style?
        {#if customTheme.textEffect === buttonId}

change data structure:

right now we have

customTheme = {
    background: string,
    buttonColor: string,
    buttonFontColor: string,
    buttonStyle: string,
    font: string,
    fontColor: string,
    textEffect: {
        effect: string,
        onHover: false,
    }
}

this is weird. i should make it consistent 
exactly how i did textEffect

export interface CustomTheme {
  background: {
    style: 'image' | 'gradient' | 'solid',
    value: string
  };
  button: {
    style: | "squareFill"
    | "roundFill"
    | "circleFill"
    | "squareOutline"
    | "roundOutline"
    | "circleOutline"
    | "squareShadow"
    | "roundShadow"
    | "circleShadow",
    color: string,
    fontColor: string,
    textEffect: {
      effect: 'none' | 'glow' | 'gradient' | 'highlight',
      onHover: boolean
    }
  };
  font: {
    family: string,
    color: string,
  }
}

export const defaultTheme: CustomTheme = {
  background: {
    style: 'solid',
    value: 'accent'
  },
  button: {
    style: 'circleFill',
    color: 'primary',
    fontColor: 'primary-content',
    textEffect: {
      effect: 'none',
      onHover: false
    }
  },
  font: {
    family: 'input-mono',
    color: 'black'
  }
};

this seems like a lot but it's actually way simpler

now i have a type: CustomTheme that contains 3 objects:
background
button
and font

ez

todo right now
make sure to persist changes throughout project

um i think i got it right so far i think i have to update the way the data is taken
on the [username] page its funky
[username]/edit works perfectly because all of the changes show instantly in the store and in the db




ui notes

"edit profile"
should transition in because the pages are almost identical



ui fixes are secondary
ui changes / experiments are supplemental, low priority

however they are all important to jot down so i can get to it later
ui fix:
appearacne page live preview:
    weird padding on Filled buttons and shadow buttons:
        its because there is no border. so the padding is thrown off

    changing the theme causes the following changes:
        fontcolor: buttons and normal text have the same color
        outline + shadow colors

    solutions

        add padding to style that dont have borders
        actually no! just add invisible border becasue the issue appears on normal mode userlinks
        its just harder to see becasue the buttons are much bigger
    
        apply the fontColorHex to livePreview / UserLink, depending on where the break is
        same with buttonCOlorHex!




macro steps:

fix app
host on server with domain: yin.yang? lol something easy / catchy etc / 
    net themes? tech
    .tech? .io? .com
let people sign up / test


current todo: fixing the homepage

upon console logging the customTheme data is correct

now i have to apply it correctly
on the page i have to fix how background is applied
and how font is applied

then for the links
im going to pass in customTheme as a prop
and clean up the other props

old export let 100 different items 🤮
new export let 1 object with 100 items 😎


cleaning up rn

✅putting the convert function in a file so i dont have to type it multiple times across files

figure out where i left off:

applying the styles correctly?

now that im passing the whole customTHeme object then i dont need the link styles on my main page


somehow i broke everything again

only certain settings are reactive on the edit page

nothing is reactive in the home page



todo

up date the appearance page to save everythign correctly:
use the new custom theme as the model


stop passing unneccessary props

just like we cleaned up the props for uselink we should clean up the props for
livepreview

live preview needs

userinfo: username, bio, pfp, links
userTheme: bg, font, customTheme object

props: bg, bio, username, pfp, customtheme


wait lets no do too much
live preview only needs customtheme becasue userlink nneds customtheme

it doesn't do anything

oh actiually it does bg adn fonts



whenever im kinda floating looking for an error to tackle
checiklist

terminal errors?
console.log errors?
intellisence errors?

in no particular order

also writing down what im ddoing helps

sets my intention

one thing at a time baby

current:
 
terminal:
nothing
intellisence:
nothing
console:
UserLink is breaking the homePage
cant read properties of undefined 'effect':

effect has to exist in the first place

if customTheme && customTheme.button && customTheme.button.textEffect?


fixed an error without gpt

how i just did thats how


unneccessary props passed in livepreview

undefined 'font' breaking livepreview


not sure if everyhting makes it into the live prewview after being passed in 
so i might as well use the store to get it

need to save everything as the correct CustomTHeme type in my db

so lets het to appearance and update asll these save functions

also update the save functions in the colorpicker component

spent a lot of time on one const value 
so now i need to touch base again to see whats next

update all functions

colorpicker is just dealing with colors so i dont have to listen to chatgpt

carefule becasue now wehn i save the default datatosave that i used is saved everytime

so lets use the userData in the default data to save. only the new cahgnes will override




august 24

new day new ....
new day, new _____


FOCUS
implement changes slowly to see how they change my project
one brick at a time. deliberatley placed

ui comments


✅can't see the text on addLink form: 
    from what i remember it's using the users theme
    but it is also using the user's font
    so has to be one or the other not both
        findings:
            not using the users theme, just using the default theme: 'red'
        solution:
            ✅use the user's fontCOlor for bg
            ✅and the bg for the font color
            ✅that way there's no way that it clashes
                unless the user chooses a font that they can't see
                boom now the problem is put on them haha checkmate😎

✅saving colors
    have to make sure that just the colors are saved and 
    that it isn't changing everything to the placeholder theme im passing into the function

    findings: 
        i am using a default custom theme 
        just so the intellisence errors dont yell at me

    solution:
        take customTheme as a prop
        update save functions to take customTHeme as an argument

        how to implement solution:
            ✅1 have customTHeme defined in username/edit/appearance as the user's custom theme: data.customTheme (however data is defined) 
            2 pass customTHeme into all instances of the colorpicker component

        how to test each step:
            ✅1 consolelog customTheme so i know that it is the correct theme and that is is congruent with the settings in their dbo

        testing:
            i watn to be very procedural so that i dont have to go back and figure out what went wrong
            now that everything looks good i can start saving colors and see how they update the customTheme

            check:
                db and customTheme to see if they are equal

        BOOM it works that was eassy haha
        easy when i know what to do
        i know what to do when i understand how everything works a little more
        lesson: 
        it's good to ask questions
        if i know how my tools work i know how to use them
        and when to use them
            good questions:
                What is this doing?
                Why is this doing this?
                

appearance page:
    current choices need to reflect the current choice that is saved in the user's db
    right now it is blank until the user makes a new choice
    that's probably because the color value is coming from ???
    
    solution;
        use the db to set the value: customTheme.(correct value)  o   

theme fallback
    preset theme should be the fallback if there is no customTheme value
    solution: 
        data-theme={data.theme} 
        bg-{background? background : 'primary'} in the body of everypage


    findings
        accent>
        appearacne page:
            currently uses a theme value for the phone bg
            but it doesn't use the customTHeme background

            solution:
                make sure it does those things

            how: 
                find out if this is a livepreview issue or appearance page issue
                probably livePreview issue

            okay i guess i got it to work but
            the livePreview isn't reactive! thats the whol point to see the changes instantly

            make it reactive!
            edit page is reactive so copy how they did it there 
            ask the team in cahrge of the edit page how they did it

            edit page reactivity

            bg ✅
            fontColor ✅
            font ❌
            buttonstyle ❌
            buttoncolor ❌
            buttonFontColor ❌

reminder of where im at:
trying to get the site consistent and make sure everything works that's it
once it's cleaned up then i add more effects. host the site. then profit 😈

current tasks 
    get the edit page fully reactive
    use those methods to get live preview reactive
    save fonts correctly
    get teh pfp upload working correctly


    errors to address later:
        if viewing page that isn't the current signed in user:
            ✅username, pfp, bio work correctly
            breaks at userLink


jstu sat back down have ot remind myself of current task:
    check what makes the edit page bg reactive and apply that method as far as the eye can see


vim cmds to learn:
    ✅jump to bottom of file
        G
    ✅jump to top of file
        gg

edit page reactivity finginds
    background + fontColor + font works from:
    $: if ($userData) {
        customTHeme = $userData.customTheme;
        background = customTheme.background.value;
        fontCOlor = customTHeme.font.color;
        font = customTHeme.font.family;
    }

    font simply isnt saving



    another issue: font color preview div
    isn't showing the fontCOlor rip
    im using 
    style={`color: ${fontColorHex}`}

    ✅solved: 
        dont need to use the hex!
        just a normal tailwind class
        bg-{fontColor}

    going back to updating the font save

    noticed taht in the font component colorpicker is imported
    it was grayed out so i just deleted it
    just jotting this down incase

    i want to record all of the changes that i make so i can see what the heck im doing

    also deleted the handlefontcolor select
    the font component jsut saves the font

    hmmmmmmmmmm

    mental htinking note
    just a thought

    since font component is cosmetic
    maybe i should just have all of the save functions in a saveFunctions.ts file?????????
    thinking emoji


    i changed the shape of what the fontsavve function does
    from:
    customTHeme: {
        font: chosenfont
    }
    to:
    customTHeme: {
        font: {
            fontfamily: chosenFont
        }
    }




issue note notice issue that i noticed:

elven doesnt display correctly on the font dropdown but i know for a fakt that 'font-elven' works as a tailwind class so i must go back and fix this
elven is a very important font to my users

font now svaes correctly



edit page reactivity

            bg ✅
            fontColor ✅
            font ✅
            buttonstyle ❌
            buttoncolor ❌
            buttonFontColor ❌


now lets get to the bottom of these buttons being unreactive

right now buttonstyles are coming from the customTHeme.button.style

so i guess its breaking un the userlink because userlink takes customtheme and customtheme seems to be A okay




side note ui thingy

text too big on livepreview in preview mode


$$$

changed

if (something) {
    something
}

to

$: if (something) {
    something way better and cooler
}

reminder:

(IM USING SVELTE ;')



edit page reactivity

            bg ✅
            fontColor ✅
            font ✅
            buttonstyle ✅
            buttoncolor ✅
            buttonFontColor ❌


button font color saves perfectly in the db
but isnt reflective nor does it reflect in the edit page at all

lets see how incorrectly userlink is using it


error:
    i was doing 
    if (buttoncolor && buttonfontColor) {
        tailwind to hex conversions
    }

    but i should've jsut had the tailwind hex conversions in 
    $: if (customTHeme && customTHeme.button) {
        tailwind hex converters
    }


 edit page reactivity

            bg ✅
            fontColor ✅
            font ✅
            buttonstyle ✅
            buttoncolor ✅
            buttonFontColor ✅   

major w


now that edit page is reactive lets check on the livepreview

livepreview reactivity:

            bg ❌
            fontColor ❌
            font ❌
            buttonstyle ✅
            buttoncolor ✅
            buttonFontColor ✅  


steps
bg
    bg-{bg? bg : 'secondary'} is going to secondary
    so maybe its an issue with how background is 

changing:
    if (customTheme) {
        background = customTheme.background.value;
        font = customTheme.font.family;
        fontColor = customTheme.font.color;
    } 

    to:
        background = customTheme.background.value;
        font = customTheme.font.family;
        fontColor = customTheme.font.color;

results:

    it works: it shows the correct bg but then it breaks the pages
    lets see whats wrong:

    terminal error:
        Cannot read properties of undefined (reading 'background')
        at eval (/Users/dylannevell/dev/fireship/svelte/myapp/src/lib/components/LivePreview.svelte:30:27)

        i think i have to wrap the change i made in an if statement


        yup

        i chagned the change early by taking off the if block completely
        but i shoulda jsut added some reactiviy
        just a sprinkly of 
        $: if (something) {
            somtehing really cool
        }







fontcolor
font


livepreview reactivity:

            bg ✅
            fontColor ✅
            font ✅
            buttonstyle ✅
            buttoncolor ✅
            buttonFontColor ✅  


new vim cmd:
change all instances after cursor

:.,$s/old/new/g

. === current line
$ === end of file





✅current todo currently

make sure the current colors are upto date on the colorpicker

i was ableto fix this by making sure that backgorund was up to date

but!

the div changes based on the current mode

so i have to conditionally apply the style based on the mode

wish me luck...luck! ok thanks





o







more notes:

transition into the fullscreen live preview

fix the pfp upload
add gradients
image bg will be kooool

edit links in one at a time


8.25.23
✅first mission: image backgrounds
    function looks clean:
        next step:
            set up form and functions correctly to handle upload
            login/photo has the form out already
            but appearance page should only show form when selected

        update db target
        customTheme.background.style && .value

    console error:
        Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'family')
        at $$self.$$.update (LivePreview.svelte:26:29)

        investigaate: 

        UserLink.svelte:39 Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'textEffect') userlink line 39

        everytime i fix one. another pops up
        i guess i have to ask like this
            if (customTheme?.background)

            lets see if this fixes everything


            background image function deletes everything


second mission: text effects

main background mission: dont overdesign.
    get site hosted

fullscreen live preview transitions in!
    phone preview is already mounted so i have to make sure that:
        not mounted when screen size is small
        clicking the preview button 👀 mounts it
gradient options
    :save choice 1 then choice 2?
    or different color choice flow?
        style with tailwind to hex conversions
    once i do that i can figure out where else to add gradients?
    buttons? oiutlines? shadows
handle image backgrounds
    let user select positions
        cover / contain / stretch
    let user select styles
        brightness? contrast? opacity? color filter?
hover link changes bg?
    color preview: glowing? content preview?
links shifted to the right on large breakpoint
    content preview on the left

saving new styles as data objects
    updating CustomTheme interface
color picker 
    preview divs on top of colorpicker
resolve dnd message positioning
    daisy ui presets have good options
    find good placement
    use cookies to only show message 1x/day (any more than taht is annoying)
let user create and save themes
choosing preset themes should overwrite all customizations
let user know 
    when they have to be signed in to view something
    edit page: cant edit someone elses page
once everything is kosher
    move all functions into saveFunctions.ts:
        saveFunctions, colorpicker, image uploads
        the best components dont have redundant functions found in other files


side quests:
    practice typing
        accuracy > speed
    learn new vim cmds
        make workflow faster => make life easier

        jump up to line that i want without having to use trackpad
            number of lines + j / k (too long to count lines)
            something quicker:
                figure it out

            choose second option from intellisence

    weird error under (doc(db, "users", $user!.uid), { photoURL: url})
    maybe use bakgtics
    doc(db, `users/${$user!.uid}`)
        this gets rid of the error message but let's see if it breaks anything?
        no breaks yet! i think it's complete
        so before i add anohter function to upload the bg lets fix the others


    cleanup unused imports they're all over this place


    await updateDoc(doc(db, `users/${$user!.uid}`), { photoURL: url })
    this saves to user.photoURL

    but for the background let's save to 
        await updateDoc(doc(db, `users/${$user!.uid}`), { backgorund: style: 'image', value: url })



fixed everything by changing the save fucntion to write bacth instead of update Doc


now make sure that userbg shows in the page


conditionally apply the bg based on the style

ill need to use <style> instead of tailwind class for gradient
and possible the image


upload functions workt

styles are applied correctyl

now need to use positioning styles:
    prompt user to select position
    save selection as new data field background: { style: image, value: url, position: 'fit' | 'cover' | 'contain' | '...etc' }
    update the custom theme
    make sure new saving functions don't mess everything up
    then make sure to set vars
    let backgroundPosition = customTheme.background.position;


just throwing in the bg doesn't look cool at all. default should be 100% 100%


positioning of the bg selector is off

also change the previews for the color picker to be on top of the collors


session 2
august 25 6PM

save customThemes

input theme name
saveTheme button => calls saveCustomTheme(name: string, customTheme: CustomTheme)

customTheme shows at front of themes array



this sumple function saves a new customTheme with a name

async function saveCustomTheme(name: string, customTheme: CustomTheme) {
    console.log('saving customTheme: ', name + ': ', + customTheme);

    const batch = writeBatch(db);
    batch.set(doc(db, `users/${$user!.uid}`), {
      [name]: customTheme
    }, { merge: true });

    await batch.commit();
  }


  im going to edit it to save into an array

  now im going to populate the themes arrary with these data.userthemes[]



  august 27
  restrict theme names to certain amount of characters


  hover animation on themes with image bgs (match the other themes)


  save background function is saving the bg to all backgrounds of the customTheme arrays

  also need to make a function for selecting custom theme and applying that right away

  notes upload bg function overwrites data for user themes


  nothing is difficult
  everything is within reach





august 29

append opacity to hex colors

function append (hex, opacity) {
    yields #Hex + (00 - FF)
}


raw userdata
livePreview toggles between user data.
that way they can see everything they have selected.
2 item carousel would be cool
use nerd emoji to signify

add previews so user knows whats what

data preview
pfp
username
bio
theme:
    background:
        style
        value
        opacity
    button:
        style
        color
        opacity
        fontColor
        fontOpacity
        textEffect:
            effect
            onHover
    font:
        family
        color
        opacity 
userThemes

see if concat function works
goal: to set opacity for different color values across my project

trying to force a result form this function
but should i simplify it?

right now to get the hex with opacity i have to
    convert the tailwind to a hex: string | undefined

goal: keep adding more style options without it getting messy


styles to add:

font size
glowing text
gradients, gradient directions

changes in data:
    keep everything in objects that make sense



use drop down to select color and save


example of new color selection:

buttonColor === 'lime-400',
shade === 'lime',
value === 400

buttonColor = shade + value


todo
implement new color selection

color picker still exists but its less in the way

color div (far left) is built with convert(shade + value) + opacity appended


the inputs can update the db on change
todo

create update functions:
    updateButtonShade
    updateButtonValue
    updateButtonOpacity

show color picker discretely below relevant options
right now it is too far below
too much scrolling


right now the buttonCOlor is split into buttonShade and buttonValue
so buttonColor = buttonShade.concat(buttonValue.toString())

so changing 1 value should apply this

but im not sure if buttonColor can be constructed from these 2 if these 2 are coming form a split


next steps
shade + value drop down should reflect the shades and values

aha!

splitting buttonColor yeilds buttonShade and buttonValue as strings but i have buttonValue as a number
let's change this and hope i stop getting yelled at

buttonValue is perpetually undefined


getting rid of the default buttonValue = '400' just saved my ass

now i need to implement the update value and update opacity functions


functions are updating perfectly
but the default inputs should reflect the values in the db


right now if i get the shade and values from splitting the buttonCOlor it does nothing
thats because the reactive conditional keeps it stuck on the values from the db

i can create a temp value but then idk how to separate it
because i have to use bind:value

can i use a default value to show the cureent ones form the db?

and bind the active values?


handle update values function?

this function passes different values into the update function. based on the binded values

here is a perfect template:

const handleColorSelect = (selectedValue: string) => {
    chosenValue = selectedValue;
    saveChoice(false, customTheme);
  };

  ill rewrite it as 

const handleUpdateButtonColor = (buttonShade: string, buttonValue: string) => {
    const [tempBS, tempBV] = [buttonShade, buttonValue];
    updateButtonColor(tempBS, tempBV)
}


right now the update functions work perfectly. infact i can probably delete the handlers

tempted to leave them and move on to somehting else

todo:
    ✅delete unneccessary handler functions
    set up color selections:
        ✅button color
        ✅button font
        ✅background
            everthing is set up kosher:
                need to do:
                    use bgchwo to reflect background with opacity in the following pages/components
                        ✅livePreview
                        ✅routes/username
                        ✅routes/username/edit
        font
            make sure that font with hex and opacity is reflected whereever bio is neccessary

            figure out why the other update functions save a new color perfeclty but font is stuck on green-500


    fix outline border sizing issue    
    fill buttons are white. doesn't listen to db button color
    let user select button color + border / shadow color
    figure out how to apply custom themes

    buttonFill is using buttonFont color instead of button color ez fix

    email hannah about geting cameras


    september 1th

    ✅how to add button color to shadow/hardshadow/outline?
    ✅just save the buttoncolor as usual then pull up another selector for the shadow/hardshadow/outline color
        ✅update the save button style function to handle cases of outline/shadow/hardshadow
            update: add new values:
                customTheme: {
                    button: {
                        style: squareHardShadow
                        color: buttonColor
                        shadowColor: shadowColor
                    }
                }

                todo foro this todo

                init buttonShadowColor vars
                buttonShadowColor
                buttonShadowShade
                buttonShadowValue
                buttonShadowHexWithOpacity
                buttonShadowHex
                buttonShadowHexWithOpacity

                if buttonShadow
                create button shadow selection div
                    bind value & bind shadow
                    bind opacity

                add handlefunctions

                if buttonStyle ends with shadow => show shadow selections
                if buttonStyle ends with outline => show outline selections 


                db looks good
                functions look good
                need to update ui to reflect new styles then let user choose colors for sttyles


            if there are any problems with the other case of saving a normally filled button then in that case ill save shadowcolor as ''

    in the case of chooseing outlines: set the button color to nothing, but give the option of choosing a value
    so that they can have a border and fill
    same with shadow

    hardShadow can be filled from the get go



    get rid of font size options
    fix border issue:
        solution to try:
            links with out border will have and invisible border. so that the content stays the same


    customThemes all have the same bg???
    theme should overwrite styles
    squareHardShadow isn't applying

    (populate data page with data :')






    


additional content:
    embedded songs/videos (soundcloud, yt)

    o






current todo 
    handleBUttonShadowColors



i probably have to make all of these color selectors into a component if i want to show the color choices

shouldn't be hard just need to pass in the relevant data and see what happens lol


current todo separate shadow / outline styles from the button color styles
    hex values are already set up 😎 thank God
    need to
        add these styles to the userlink component the same way that id did with the other ones



default value is defaulting alright

        but but but but choosing hardshadow style deletes the shadow value

        hardshadow functions deletes the hardshadow value??
        shadow value is needed for styling the color it's very imbortant

        this is because the save button style uses tempButtonShadowColor / tempButtonBorderColor to style it but
        these temp values are set to '' before they are called in the previous function

        solution:
            just keep the tempcolors?? and see what happens 
                everything is saving correctly.

            next step to see if my solution worked well
                update ui to reflect the values in the db
                    hit the userlinks component

                    userLink checklist
                    
                    ✅ Button Color
                    ✅ Button Font Color
                    ✅ Border Color
                        ✅ Color
                        ✅ Opacity
                    ✅ Shadow Color
                        ✅ Color
                        ✅ Opacity


                        boom got it. forgot to update value based on the db so they just defaulted to lime


now that everything is good to go let's see if i can add a border and a buttoncolor && add a shadow and a button color


fills without borders need invisible borders so they the children don't get squeezed squeezed



livepreview mobile fullscreen:
    the link sapacing is kinda off
        FIX IT

        DONE ✅


add data viewer to livepreview even if it's not in fullscreen


appearance page:

    on refresh. userData isn't take into account???



need a better solution to the displayed data in the inputs

i really want to display the curretn data in the db without funcing everything up

let's give the normal homepage some more space betweeen links just a tiny bit


there should be no discrepencies between the livepreview fullscreen mobile mode preview
and the actual homepage
o



usingo the userdata store instead of importing a customtheme prop evertyime

now i need to go back and delete unneccessary livepreview props

how to make a color selection component *thinking emoji 🤔



what's neccessary?
html
vars? functions?

    feautures that need color selection
        background -> BG
        font -> F
        buttonColor -> BC
        buttonShadow -> BS
        buttonBorder -> BB
        buttonFont -> BF
            what vars does each need?
                color: 'lime-400' === `value + '-' + shade`
                value: 'lime'
                shade: '400'
                opacity: 100
                hex: #A3E635 === convert(tailwindClass)
                hex with opacity: #A3E635FF === concatOpacity(color, opacity) 
            what html elements does each need?
                preview: button that displays hex with opacity
                    style={`background-color: ${hexWithOpacity}`}
                    on:click={() => colorPickerToggle()}
                valueSelection: dropdown that shows each value at a shade of 500
                    bind:value={value} 
                    on:change={() => handleColorSelection(value, shade)}
                shadeSelection: dropdown that shows each shade of the current value
                    bind:value={shade}
                    on:change={() => handleColorSelection(value, shade)}
                opacityInput: number / text input that takes opacity
                    bind:value={opacity}
                    on:change={() => handleOpacitySelection(opacity)}


    functoins
        updateColor(mode, value, shade) {
            
        }

        updateOpacity(mode, opacity) {

        }


    so i cannot figure out how to make the updateColor function inside of the theme.ts
    [but ill just keep it in the appearance page. that's the only one that will neeed it. :']

    function should be straightforward.
        Questions:
            will the temp var be tricky depending on the styles?
                NO


    current work september 2:

        updating update functions into 2 functions:
            updateColor
            updateOpacity
        updating names
            using consistency
            changes:
                [bg, bc, bs, bb, bf, fc] for [background, buttonColor, buttonShadow, buttonBorder, buttonFont, fontColor]
                outline -> border
                using consistent naming to easily find vars and keep track of them

side notes:
    add styles:
        linkStyle:
            link: normal
            contentBlock: big
        hover behavior:
            change bg: color / image
            translate x / y
            color
            link preview: on the side
        buttonStyles:
            yayoBorder 😎
    livePreview link titles:
        too big?
    link sizes?
        less padding?
        font size?
        shadow tightness?

    september 3 456Am
        changed all instances of outline to border
            go into other files and change them as well

        i didnt' quite create a new component for the colroSelector. but I
            consolidated all of the update functions into
                updateColor() && updateOpacity()



clearing db and making new users to see what's broken:

    logged in with personal email
        username: swimming
            console error: 
                +page.svelte:35 Uncaught (in promise) FirebaseError: Invalid document reference. Document references must have an even number of segments, but usernames has 1.
                doesn't break anything so ignore for now
            
        given a weird template page with shitty styles
            fix this.
            make it pop from the moment the users creates a page
        no guidance
            give them arrows to direct them to customize the appearance

    pages don't work because they are relying on the db values to style but there is no default. perhaps i should let customTheme === defaultTheme



    log in page:
        log in / register
        need to have it streamlined for existing users.

        existing users:
            sign in:
                view page? -> routes/[username]
                    button that is a cool preview of their page
                edit information? routes/[username]/edit
                    button that is a closeup of their profile? bio? etc
                customize appearance? routes/[username]/appearance
                    something that reflects themes

        new users:
            register with gmail:
                welcome user: prompt through account creation:
                    username -> photo -> theme -> editPage -> appearancePage



checking for the userthemes on a new user nullishly because they dont have any custom themes from the ri



/Users/dylannevell/dev/fireship/svelte/myapp/src/routes/login/username/+page.svelte
Expected "}" but found ";"
 58 |          ],
 59 |          customTheme |  defaultTheme,
 60 |          userThemes |  [ light, dark ];
    |                                     ^
 61 |      });



title lengths for links can be much longer ;l


weird thing happening with the themes array

all the elements of the default themes: light + dark are showing up in the array
name, name, bg, bg...etc
probably has to do with the update to the CustomTHeme type: name: string

todo

update name saving on customThemes
select theme switches theme
make sure that theme names are unique

set theme function: 
    select for theme by name
    apply styles to customTheme in db

update save theme function
    currentyl when a theme is saved it just says unidentified in the themes array
    so i need to check the title uniquness, save the name correctly, and allow for selecting by name
    also save theme function should take you back to the top so you can see the saved theme

this little 👆 is small potatoes


save theme funtion should check the theme name. approve => then say "theme saved" then it should take you back up to the top after


show buttonStyles in the theme selection
that's a pretty important detail




for theme in userThemes {
    if data.theme === theme.name (
        then theme.current = true
    )
    if theme.current === true {
        pop to the front of the userThemes array
    } 
}



handleTheme select function:
    checks if name match anything from data.userThemes
    applies all of the data from that theme


let's figure out how to see the data from the chosenTheme and put it in the customTheme field

    i do not need a current: boolean,
    because i have the data.theme: string, field


for theme in userThemes {
    if ($userData.theme === theme.name) {
        $userData.customTheme = {
            theme
        }
    }
}


september 6

    saveTheme:
        use temp db object to save theme to see how it works
        tempTheme: theme

        tempTheme is saving the userThemes index previous to the one i want saved

    fixed the issue no need to explain the fix tbh

    theme's over customThemes?
    also on saving a new customTheme the user should be take to the top of the page


    new loop
        check for a match between chosenTheme and a prebuilt theme
        if there's a match -> data-theme="chosenTheme"
            in order to apply this we must nullify all fields within the customTheme
            that way the prebuilt theme takes over

        for const theme in prebuiltThemes {
            if chosenTheme === prebuiltTheme {
                customTheme: emptyTheme
            }
        }
            implementation:
                create new type: emptyTheme
                import emptyTheme
                set customTheme to empty theme
                easy



possible problems with setting and empty theme?
    none i can think of as long as user is still able to make other choices and add them.
    this way works best becuase now they can have a blank state and even if they want to make one simple font change they can save it


empty theme works but...
    somewhere i have totally-gothic set as the default font.
    buttons:
        emptyTheme deletes the buttonStyle.
            default daisy ui doesnt quite takeover
            so we're left with no button at all
            except in the livePreview
                solution:
                    iirc the btn class is what daisy uses to differentiate the button shapes between themes
                    compare and contrast the livePreview? the livePreview looks really nice
                    let's use all of the styles from the livepreview component because there might be a lot getting in the way

                update: livepreview only keeps the buttonstyle before refresh. on refresh it's lost


problems: 
    users: 
        if signed into spuds:
            i can go to chuddie/edit/appearance.
            but it still shows spuds data in the livepreview
            it shouldn't let me be in at all.
            the good thing is that only spuds can change the data in spuds db



september 7

    default button styles?
        style: circleHardShadow
        shadowColor: black

    default border colors?
        essentially we want something to be on the page 
        without the user having to select a style and select a color
        the less clicks the better


the button styles are broken because i got rid of the buttonstyles type object from theme.ts
    what to do
        create another way to parse the buttonStyles from the data
        in UserLink.svelte component

            so far userLink has buttonStyle = customTheme.button.style

                from this we need two things:
                    radius + style
                    example circleHardShadow: radius = circle, style = hardShadow.

                        radius:
                        square = none
                        round = 0.5rem
                        circle = full

                    create function:

                    parse style

                    

style is upadating in the database correctly but the style isn't showing up correctly

the border opacity is 0 when i choose squareBorder.
    let's simply set it to 100 whenever i choose a border style



todo:
    make sure all style selections are reactive
    make sure daisy ui themes use daisy ui colors. (that way all of the colors work together)
        in order to make the primary work i have to use the theme style in my emptyTheme
            then jsut have the ui in userLink be able to process that style
            


buttonStyle compatabilities

hardShadow doesn't work with any other style
border + fill works
shadow works with every one
fill works with every one 
    but clicking on the fill style should remove the opacities of other styles


problem all hardShadow options are showing up as roundHardShadow


if buttonstyle = theme when selecting a buttonstyle
    no color should be applied

    main goal: themes should have no color values! that way we can use the primary/secondary daisy ui


feeling slow so i need to pick one task and break it down to every single task


current task: 
    handle button.style === 'theme'
        let's let theme = circleHardShadow without the color value


note: having a border and a HardShadow color looks cool


something to think about
something to consider
somethings to ponder

which combo of daisy ui styles to use for the page

bg-primary
buttons-accent
border-primary-content
shadows-secondary
font-primary-content


the style for the livepreview is close to what i want for the main page


work on the theme later: alsdfaogefkasdpogknasd


new button color selection

toggle button that toggles the transparency from 0 / 100

that way i can keep the button colors uniform

every button can have a fill, border, shadow/hardShadow



sep 9

hardshadow is applying but the radius isn't

choose radius then style

take it slow with these changes so that i don't make it worse than it is

relevant files for this:
    edit/appearance
    UserLink.svelte

if i run into any conditionals that only allow for certain styles i should delete those
    these can stack
    they will be controlled by the opacity toggles

    the user is dealing with links. not buttons
    button font color => link font color / link title color

    wireframe a good way to toggle the styles and chosoe the colors


    fill ✅/❌
    link style / color / opacity

    border ✅/❌
    border style / color / opacity

    shadow ✅/❌
    shadow style / color / opacity

    radius
    none, 0.5rem, full


    steps surgically remove the button color selector and implant it into the fill div taking out the buttons

    create on and off button states

    on = 100% opacity
    off = 0% opacity

    todo reformat all of the html. add styles for borders / shadows etc


loading state



september 11, 23

notes:

add a toggle for the background color so that the user can use the theme colors if they want to.

implement:
    handler function:
        solid
            choosing solid should set value field to '':
                that way the default daisy ui can come through
                    actually i think it does this even though for the value field it still shows the img url we uploaded earlier
        gradient
            create ui for:
                add to the handler and update function:
                    if (mode === 'bg') {
                        style: defaultGradient
                    }
                    showBackgroundGradientSelect
                2 button selections
                gradient direction choice1


                
                the color choices dont fit horizontally so have to wrap in another div and hit it with the flex flex-col
                create a directional selection

                [top left]     [top]    [top right]
                [left]                      [right]
                [bottom left] [down] [bottom right]

                best way to do this?
                use arrow icons with handler functions

                daisy ui join?
                flex col
                    3 rows of 3 buttons? evenly spaced

                create button handlers for each direction
                create a selected button state
                update the style based on the gradient. 
                use a default gradient if no color is selected
                default is based on the button color because that looks pretty cool rn


        image


september 12

✅homepage uses wrong data-theme, but edit page uses correct theme from db
    go into edit file and search for 'data-theme'
✅edit page needs correct styles:
    font + font color
✅get rid of change pfp box & hover pfp

✅reminder! buttons => links
    this sounds way better and more specific thatn just calling the links buttons lolol

notes for later:


current focus:
    implement the gradient:
        gradient value in the db: 'from, to, direction'
            parse these values into hex codes, one by one
                fromHex = convert('from')
                fromWithOpacityHex = concatOpacity('from', opacity)
                toHex = convert('to')
                toWithOpacityHex = concatOpacity('to', opacity)
            now we have (at least) 2 hex values we can use as the opacity
                use these values to style bg

                
examply gradient value in db
background
    opacity: 100
    style: 'gradient'
    value: '#00000, #FFFFF, 45' ('from, to, direction')

    so we need to get the hex from the db.
        step 1 get value from selections.
        step 2 convert
        step 3 concatonate

                solution:

                    declare vars:
                        let from;
                        let to;
                        let direction;
                        let angle;
                        
                    split the gradient value: [from, to, direction]
                        from = gradientValue[0]
                        to = gradientValue[1]
                        angle = gradientValue[2]
                    
                    
                    create css class
                        .gradient-bg {
                            background: linear-gradient(var(--angle, to right), var(--from), var(--to));
                        }

                    apply gradient-bg conditionally if background.style === 'gradient'


                handler function:

                    ux flow experince:
                        hit gradient button. pick 2 colors
                            each color choice triggers updateGradient(fromValue, fromShade, fromOpacity, toValue, toShade, direction)


                    handle gradient direction selection angle degrees


                    take breaks but don't lose focus:
                        next task when i come back
                        get a value saved in the db
                            complete updateGradient function


get rid of the construction disclaimer on the gradient choice



ui looks good

now let's handle the handling functions so they are functioning


    handle colors and convert them to colors with hex



    now i will put the gradient to the left of the gradient direction selection so that the user can see a preview



    september 14

    add distance between gradient preview and graident direction selector
    ✅opacities aren't being added into the gradients
    ✅gradient preview is sitting weird. let's tidy that up a bit.
    ✅add value to the preview on color selections
    ✅update degrees in db
    ✅opacity doesn't update in the db
        opacity and direction only update on the colorchange
        add on:change to direction and opacities to use the same function
    ✅implement into livePreview. editpage. && homepage
        steps:
            1: get to this style:
                    style={`background: linear-gradient(${direction}, ${fromHexWithOpacity}, ${toHexWithOpacity});`}
                    so each page will have to parse this data from the db
    theme buttonstyle should stay the same.
    addlink form needs a bg
    link animations should come from inside div
    link toggles should trigger updateButtonColor
    becasue my styles stack i should get rid of the buttonStyle field completely
    i should jsut use
        fillStyle
        borderStyle
        shadowStyle


    updated data: 
        button.radius
        button.color -> button.fill
        button.opacity -> button.fillOpacity
        deleted button.style

    make sure the save functions are updated!
        how to update:
            don't check for the buttonStyle! just check for:
                fill / border / shadow
                    fillStyle / borderStyle / shadowStyle

                should just be 
                
                fill: {
                    style: string
                    value: string
                    opacity: number
                }

                border: {
                    style: string
                    value: string
                    opacity: number
                }

                shadow: {
                    style: string
                    value: string
                    opacity: number
                }

                textEffect: {
                    effect: string
                    value: string
                    opacity: number
                }




    let user add their own hex codes!
    let user add social media icons
    set limits on file sizes
    add decorations
    add banners
    add custom cursors
    add music
        music players with custom skins
            winramp uploads


september 17
    

fill / border / shadow

colors are always on
opacities are switched on and off
styles create conditional styles

toggling styles should just set style to none instead of toggling opacity that way i can toggle the one wih oacpityies

todo

userlink.svelte
    convert colors into hex codes
    update html to consider styles
        fill.style / border.style / shadow.style
            if (fill.style !== 'none') {apply the style}
                !that way the opacity stays the same even when style is toggled on/off


hexcodes should be added to db as soon as color values are added.
    put the convert function in any function that saves a color


when toggling the button appearance settings:
    fill / border / shadow
        if toggled off: {style = 'none'} but when i toggle back on, how do i get back to the same style?
        add new field to each section:
            visible: boolean
                so style doesn't change at all / opacity doesn't change at all

also add and update onHover so that i can set
    link.title.onHover === true / false



somehow updateVisibility is saving to another undefined user and not the current user.



september 20

✅1. let user delete color so they can use the theme color
    ✅background
    ✅fill border shadow
    ✅font !need to make a font color option in the first place
2. edit page background doesn't work
3. creating a range selector for the border width
✅4. update ui to show the border options
✅5. edit/appearance uses default theme. should use user theme
6. get the default theme values consitent:
    bg-secondary
    link-fill-primary
    link-border-accent
    link-shadow-accent
    link-title-primary-content
    font-secondary-content
7. links get deleted from users db but they still appear in the firestore storage?
    further investigation required
8. while I'm in the color selectors I will fix the updateOpacity functions
9. create onHoverToggleFunction for the onHover toggler
10. onHover toggle needs to be bound to a different value because what we have right now doesn't work wtf
11. pfp in data div needs to be just a little bit smaller


jsut learned about input type="color" haha nice.
refactoring... everything....😎


consider percentages with gradients

let user enter in custom hex next to the color input


get this color input squared away on the background color then i should be able to copy and paste everything into the other sections


september 22 23
functionality check:
    save function
        Hex?
        opacity?
        style?
        value?

value field should be changed to url

i already have opacity as a separate field in the db so i should just style them separately instead of trying to smash them together

(updating all the changes i self imposed :"'''')


september 23

create hex inputs for the gradients

radius selection divs can be smaller

todo list:


✅finish adding gradient cases to update color function

✅get rid of convert functions we use hex codes here

refactor all of the color + opacity inputs
    background
        ✅solid
            ✅hex
            ✅opacity
        gradient
            from
                hex
                opacity
            to
                hex
                opacity
    link
        fill
            solid
            gradient
        border
            one color
            gradient
        shadow
            one color
            gradient
        title
            font color
            effect color
    font
        

handle opacity and hex values separately

create more custom styles



link styles
    link tree style
        short, wide
        left: custom icon 
        center: Link Title

    hoo bee style
        social media icons
        tall, wide links
            background: custom photo / gif
            bottom left: title
            bottom right: (optional) link type icon
        grid of smaller square links

    remilia style
        ?
        ??
        ???

    swimming style
        links on one side hover link to show preview on the other side
        links in the same spot, hover link to change the background


is there a way to let user's sign up without email? just wallet?

can i let a user define a grid for the drag and drop component?


fill out the todolist above

background gradient:
    going to test if this works:
        batch.set(doc(db, `users/${$user!.uid}`), {
          customTheme: {
            background: {
              style: "gradient",
              gradient: {
                from: {hex: fromHex, opacity: fromOpacity},
                to: {hex: toHex, opacity: toOpacity},
              }
            }
          }
        }, { merge: true });

        or if this works

        batch.set(doc(db, `users/${$user!.uid}`), {
          customTheme: {
            background: {
              style: "gradient",
              gradient: {
                from: from,
                to: to,
              }
            }
          }
        }, { merge: true });



9 28 23


upload image -> if success { show image style options }


set up background style choices

    background-size: auto, cover, contain
    background-position: 
           top left, top center, top right,
               left, center, right
        bottom left, bottom center, bottom right
    background-repeat: repeat, repeat-x, repeat-y, no-repeat, space, round

stop nit picking the design and just get something out there get the buttons and the functions
get the buttons sand the funtctions


add a teeny tiny toast notification that lets the user know that their change was successfully saved to the db

keep trach of user selected value so that i can style that differently that way the user doesn't have to remember what they have

let user fill in their own css where applicable. i want to give them a sense of accomplishment. i want them to feel smart for using my app


next todos:
    ui for background image settings.
    get rid of old color selection methods
    show save messages for every change made.
    delete change message after 1s


october 2
keep updating the color selections



october 3

site inspection notes:
    pressing the gradient button resets the style to 'gradient'
        but we want to be able to keep style as 'radial gradient' if that's what it was before
            solution: if style === 'gradient' | 'radial gradient', style = style
    should the settings for the given background style just be opened?
        that way they won't even have to be toggled by the user
change saved message needs to self delete after 0.5s.
    copy the one from monkeytype
radial gradient needs to be reflected in the gradient preview
    if i am going to keep the line at the bottom that restates all of the users choices,
        i think that i should make it more of a declaration:
            "Linear Gradient from color1 to color2 at 0deg."
        or just show the css line:
            background: linear-gradient(0deg, #color1, #color2)
        or  background: radial-gradient(#color1, #color2)

yes lookiing back at the background styles div I think that the styles should be open all the time to the corresponding style.
although the image style should only set the background style to image after the image is uploaded
    saving an image is too much of a commitment to keep changing it every time the user presses a button

updateStyle() && setStyle() are redundant. updateStyle() just handles bgs anyways so let's consolidate them into setStyle

updatedSuccessfully needs to auto delete after 0.5s as well

now i need to apply the same logic to showing the fill border and shadow options

not sure how but i broke it



link toggles:
    bind:checked={fill} stays stuck on fill because it is reactively using the db value to stay the same always all of the time every time
    checking and unchecking should update visibility 
    solution: updateVisibility('fill', !fill)
        the !fill is crucial