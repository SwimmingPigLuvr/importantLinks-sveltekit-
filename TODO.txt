make sure that theme is saved to firestore
make sure that the html is using the user's saved theme as the theme, 
not the selected theme

if no theme saved or if not logged in => default theme

let user create their own theme
just create a color picker for primary, secondary...

let user change username


center links
let user upload custom links

finish video series



set link icons to images

figure out best way to integrate custom themes:
font choices, colors, etc, stored on a users database


appearance:

Profile:
div 
    PFP: pick an image / remove
    profile title: (default is @username)
    Bio:
    div
    + Add Social Icons
    /div
/div

Themes
div
    grid of themes to choose from
/div

Custom

Backgrounds
div
    grid of backgrounds to choose
    div
        color picker
    /div
/div

buttons
div
    grid of link button options
    button color picker
    font color picker
    shadow color picker
/div

Fonts
font picker
color picker

_____________

should i build the ui then figure out how to connect these variables to the backend?
yes i think so
should be hard. just like i created a way to save the users links. should be the same
they can be saved as:
lightTheme
darkTheme

userTheme:
    userbg
    userButton
    userButtonColor
    userButtonFont
    userButtonFontColor
    userButtonShadow: true/false
    userButtonShadowColor
    




TODO 7/29

think about architecture of the appearance settings

user should be able to amke changes everywhere after one click

they select primary, secondary, accent colors

fonts

then whereever those fonts are used the database is called to bring it in.


---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------


8.01.23

theme. let's first make sure that i can save the users theme then also call the users theme whereever neccessary
[username] & [username]/edit art the only ones so far.
let's see what it takes to make it load as fast as possible that way someone looking at your link site doesn't have to wait for the page to load

the theme picker works!
now i need to go back to all of my link styles and make sure that they follow the daisy ui
names: primary, secondary etc...

then once that is done i can create a page that lets the user pick each style individually. 
this will create a new theme and save it to the database: userTheme.

the prebuilt themes just use the name to determin styles becasue they are already built out
the userTheme will have to save each user selection

does this mean i will have to make a call from my database to the tailwind config file?
also each selection will have to trigger the corresponding css/tailwind classes to be defined

list of customizations
bg
font, font color
button color, button corners,


aubust 02

UX choice:
finish login, choose theme, go to profile page/link page

more ux:
choose themes:
list the same themes from before.
this time with previews:
preview is a smartphone shaped div 
with a background 
and 3 horizontal divs to resemble links

changes are saved as they are clicked.
database makes realtime updates

8.03

make an appearance page.

linktrees ui is great so i will use that as my wireframe



august 15 todo

âœ…fix edit profile h1 height on edit page so that when user clicks edit the pfp stays in the same place
ðŸ¤”change the bottom margin of the bio for the same reason

username page has worse defualt bg than edit page

make bio and pfp editable from edit page

edit page doesn't use customBG
edit page loses theme completely

appearance page loses theme and links after reload

buttonFontColor is something to fix

footer covers content

live preview needs to be reactive to instant changes


finished


audust 17

ideas

anymessage shjouldnt be annoyingh at all! thats the opposite of helpful
should have a nerd emoji giving tips

have remilio giving anouncements. anything with more authority really

still have to figure out how to stop propogation on the links on the edit page!

the button needs to be redesigned anyways so 
i think that it should just take up the whole right side of the link. 
maybe square shaped and a little trash emoji



friday august 18 755 am

add loading animations

new idea: complete customization. users can have links be any kind of shape or size

destroyed tasks
âœ…dnd Message shouldn't be so wide

âœ…adding delete button to the sortable list component 
âœ…so that i can use the index to determine the exact link to delete

âœ… --cant scroll links. they just deadend--


focused tasks
links load in 1 at a time. 
i used to know how to do this idk where the solution went 
but its al ot more simpler that the ones ive been seeeing

ðŸŒ¸
august 19

goal:
    create a working store for the users themes


ðŸª´example from docs
    <script>
  import { writable } from 'svelte/store';

  const count = writable(0);
  console.log($count); // logs 0

  count.set(1);
  console.log($count); // logs 1

  $count = 2;
  console.log($count); // logs 2
</script>


why? 
    instant reactive changes. 
    consistent easily called customizations across pages

how:
    get data into store from db, 
    call store from anywhere in project



âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…âœ…

NEW FOCUS

figure out the best way to make a store and go from there! 
eliminate redundant code 

so far the users first page works the best!
find out why and use that why!

ðŸŒ¸
august 21

figure out what i figured out from yesterday
why how why

figure out whats breaking and why

ðŸ˜‚
also make sure that when a user wants to sign in on mobile they can. it gets all fucced up when it opens a google sign in


ðŸŒ¸critical mission: fix theme

so rn i have updatetheme called on homepage

update theme sets the themeStore to custom theme

so now the customtheme lives on the theme store

so now i should use the themestore to style values

ðŸ—£
goal to make everything easily customizable

but not too complicated

should i have the theme store in my livepreview? or in my appearance page??
both i think yeah

figure out how to upload a new pfp from the edit page?

also why the f is the edit page using a weird theme

lets get down to the bottom of this


august 22

see where its fucked up
fix that
then ui

ðŸŒ¸ APP TODO LIST ðŸŒ¸
âœ… edit profile theme needs to work
âœ…nav bar: quicker, made into a component, text size
âœ…nav bar: home. edit. appearance.
âœ…if on page then the nav should reflect that: dimmer text color

âœ…livepreview should reflect a real live preview
    set up store same way that the other files have it
        âœ…data loaded in properly
            variables set up properly
                lets set up divs to test? wait is this really the best way

        question? should i set up the userdata for live preview? or just pass it in as props?
        lets find out shall we
    ???

update outline border styles


maybe different nav solution for the appearance page. 
    let's see how well it fits in


preload edit page so there is no lag at the begining

enhanced customizating (see list below)

theme should take over custom options

fix:
upload pfp 
upload bg 
gradients

ui todo list:
center link titles
link shadows are too big
edit:
    move edit bio button to the side
livepreview:
     should animate in on fullscreen



enhanced customization
composition: links locations
content: videos, blog posts

hover settings.
    default is currently translate to the right and down a bit
    color changes
    show preview
    each link has a color id that changes the background on hover
link size and shape.
shadow color, size, grow on hover
border color, size, grow on hover
custom cursor


idea:
to get ready for all of these new customization features that i want to add
i should extend CustomTheme
already i have hex codes that should be added





short todo

fontcolor colorpicker is opening the button color picker
it still works it just exists above

live preview doesnt yet show the font color. 
maybe the div that live preview is in can just be the font color so i dont have to pass the data (lazy)

but if this doesn't result in a reactive change then let's just pass the data


weird minor detail bug?

on appearance page the theme of the page changes to default when refreshed.

but the live preview stays on the correct theme



âœ…head to uselink and figure out how to center the titles
ducktape bandaid solution: -translate-x-6

âœ…prebuilt theme doesn't properly apply to homepage



âœ…homepage isnt reactive because its not using the store the same way that edit page is using $userData



need to resolve the footer

need to have credit but also direct user to create their own if theyre not logged in


should be able to see other users content without being logged in

description of the error 
i can only be signed in under @Remilio
once signed in i can user any other users username as a route 
localhost/PeterGriffin just shows me remilios data
but if im logged in as PeterGriffin then i cant see anything


somehow i broke it

probably the userstore only accepts remilio as data but the app should be able to pull any users' data
the only thing that you have to be logged in for is editing the data: edit, appearance


august 22 6:13pm

planning each step so i can organize how i think about the code:

âœ…{right now the link title is shifted to the left. 
this centers it perfectly 
but in the live preview it goes too far

i need to find the state that is passed into userlink that lets it know that it is in preview mode
then i need to make sure the style is cahanged for the little mini baby links}âœ…



themes only work if there is no custom theme value
prebuilt themes are the fallback

tell the user that themes are fallbacks 

or we can take into consideration that themes weigh more than custom themes
let the user save a custom theme



main user page has no set theme
fallsback to default theme

last selection first
current theme goes

theme -> custombuttons => theme + customButtons
custombuttons -> theme => theme

how do we go about this?

certain bg colors dont cover screen weird



important tasks
fix auth buggy wigyyy



dnd message feels weird



focus

todo
get data from the user that is in the route

example if user is on yin.yang/PeterGriffin then we use that to get the data
update the $themeStore with that

make sure edit only is available to signed in users
edit only if (user is signed in && user matches yin.yang/username)


lets see how i got that page param in the nav

import page from $app/svelte

// on yin.yang/remilio

console.log('$page.params.username: ', $page.params.username); === [username]
then updates the $userData store 
with all of the data from that users db

nav to edit / appearance only if logged in



add glow effects

fullscreen preview on hover would be sick

new section:
text effects
tracking


create a toggle to choose hover on text effects

hover effects: rotate? clock animation thing real old school style
the css possibilities are endless


august 23:
focus

is anything broken??

or can i just start throwing in styles?

I should really expand on the CustomTheme type

so that i can easily add it to my data

so my ui focues should be the userlink component styles


todoList
Create toggle for text styles:
    hover / static
    on:clicking the text style should default to static
    âœ…this should trigger a handler function that saves into the db
    what info do i need to know?
        textEffect: {effect: string, onHover: boolean}
    should toggle only appear on chosen style?
        {#if customTheme.textEffect === buttonId}

change data structure:

right now we have

customTheme = {
    background: string,
    buttonColor: string,
    buttonFontColor: string,
    buttonStyle: string,
    font: string,
    fontColor: string,
    textEffect: {
        effect: string,
        onHover: false,
    }
}

this is weird. i should make it consistent 
exactly how i did textEffect

export interface CustomTheme {
  background: {
    style: 'image' | 'gradient' | 'solid',
    value: string
  };
  button: {
    style: | "squareFill"
    | "roundFill"
    | "circleFill"
    | "squareOutline"
    | "roundOutline"
    | "circleOutline"
    | "squareShadow"
    | "roundShadow"
    | "circleShadow",
    color: string,
    fontColor: string,
    textEffect: {
      effect: 'none' | 'glow' | 'gradient' | 'highlight',
      onHover: boolean
    }
  };
  font: {
    family: string,
    color: string,
  }
}

export const defaultTheme: CustomTheme = {
  background: {
    style: 'solid',
    value: 'accent'
  },
  button: {
    style: 'circleFill',
    color: 'primary',
    fontColor: 'primary-content',
    textEffect: {
      effect: 'none',
      onHover: false
    }
  },
  font: {
    family: 'input-mono',
    color: 'black'
  }
};

this seems like a lot but it's actually way simpler

now i have a type: CustomTheme that contains 3 objects:
background
button
and font

ez

todo right now
make sure to persist changes throughout project

um i think i got it right so far i think i have to update the way the data is taken
on the [username] page its funky
[username]/edit works perfectly because all of the changes show instantly in the store and in the db




ui notes

"edit profile"
should transition in because the pages are almost identical



ui fixes are secondary
ui changes / experiments are supplemental, low priority

however they are all important to jot down so i can get to it later
ui fix:
appearacne page live preview:
    weird padding on Filled buttons and shadow buttons:
        its because there is no border. so the padding is thrown off

    changing the theme causes the following changes:
        fontcolor: buttons and normal text have the same color
        outline + shadow colors

    solutions

        add padding to style that dont have borders
        actually no! just add invisible border becasue the issue appears on normal mode userlinks
        its just harder to see becasue the buttons are much bigger
    
        apply the fontColorHex to livePreview / UserLink, depending on where the break is
        same with buttonCOlorHex!




